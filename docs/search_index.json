[
["hox-ch-5-longitudinal-example-student-gpa.html", "10 Hox ch 5: Longitudinal Example - student GPA 10.1 Background", " 10 Hox ch 5: Longitudinal Example - student GPA library(tidyverse) # dplyr, tidyr, ggplot, the pipe, ect. library(haven) # read in SPSS dataset library(furniture) # nice table1() descriptives library(stargazer) # display nice tables: summary &amp; regression library(texreg) # Convert Regression Output to LaTeX or HTML Tables library(psych) # contains some useful functions, like headTail library(car) # Companion to Applied Regression library(lme4) # Linear, generalized linear, &amp; nonlinear mixed models library(HLMdiag) # Diagnostic Tools for for nlme &amp; lmer4 library(sjstats) # ICC calculations library(sjPlot) # Quick predicitive and diagnostic plots library(optimx) # Different optimizers to solve mlm&#39;s library(VIM) # Visualization and Imputation of Missing Values library(effects) # Estimated Marginal Means library(naniar) # Summaries and Visualisations for Missing Data 10.1 Background The text “Multilevel Analysis: Techniques and Applications, Third Edition” (Hox, Moerbeek, and Van de Schoot 2017) has a companion website which includes links to all the data files used throughout the book (housed on the book’s GitHub repository). The following example is used through out Hox, Moerbeek, and Van de Schoot (2017)’s chapater 5. From Appendix E: data_raw &lt;- haven::read_sav(&quot;https://github.com/MultiLevelAnalysis/Datasets-third-edition-Multilevel-book/raw/master/chapter%205/GPA2/gpa2.sav&quot;) %&gt;% haven::as_factor() # retain the labels from SPSS --&gt; factor tibble::glimpse(data_raw) Observations: 200 Variables: 16 $ student &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16... $ sex &lt;fct&gt; female, male, female, male, male, female, male, femal... $ highgpa &lt;dbl&gt; 2.8, 2.5, 2.5, 3.8, 3.1, 2.9, 2.3, 3.9, 2.0, 2.8, 3.9... $ gpa1 &lt;dbl&gt; 2.3, 2.2, 2.4, 2.5, 2.8, 2.5, 2.4, 2.8, 2.8, 2.8, 2.6... $ gpa2 &lt;dbl&gt; 2.1, 2.5, 2.9, 2.7, 2.8, 2.4, 2.4, 2.8, 2.7, 2.8, 2.9... $ gpa3 &lt;dbl&gt; 3.0, 2.6, 3.0, 2.4, 2.8, 2.4, 2.8, 3.1, 2.7, 3.0, 3.2... $ gpa4 &lt;dbl&gt; 3.0, 2.6, 2.8, 2.7, 3.0, 2.3, 2.6, 3.3, 3.1, 2.7, 3.6... $ gpa5 &lt;dbl&gt; 3.0, 3.0, 3.3, 2.9, 2.9, 2.7, 3.0, 3.3, 3.1, 3.0, 3.6... $ gpa6 &lt;dbl&gt; 3.3, 2.8, 3.4, 2.7, 3.1, 2.8, 3.0, 3.4, 3.5, 3.0, 3.8... $ job1 &lt;fct&gt; 2 hours, 2 hours, 2 hours, 3 hours, 2 hours, 2 hours,... $ job2 &lt;fct&gt; 2 hours, 3 hours, 2 hours, 2 hours, 2 hours, 3 hours,... $ job3 &lt;fct&gt; 2 hours, 2 hours, 2 hours, 2 hours, 2 hours, 3 hours,... $ job4 &lt;fct&gt; 2 hours, 2 hours, 3 hours, 2 hours, 2 hours, 2 hours,... $ job5 &lt;fct&gt; 2 hours, 2 hours, 2 hours, 2 hours, 2 hours, 3 hours,... $ job6 &lt;fct&gt; 2 hours, 2 hours, 2 hours, 2 hours, 2 hours, 3 hours,... $ admitted &lt;fct&gt; yes, no, yes, no, yes, no, yes, yes, NA, yes, NA, yes... data_wide &lt;- data_raw %&gt;% dplyr::mutate(student = factor(student)) %&gt;% dplyr::mutate_at(vars(starts_with(&quot;job&quot;)), # choose the &#39;job&#39; variables stringi::stri_sub, # extract a part of the text from = 0, to = 1) %&gt;% # we only want the first &#39;spot&#39; dplyr::mutate_at(vars(starts_with(&quot;job&quot;)), # choose the &#39;job&#39; variables as.numeric) psych::headTail(data_wide) student sex highgpa gpa1 gpa2 gpa3 gpa4 gpa5 gpa6 job1 job2 job3 job4 1 1 female 2.8 2.3 2.1 3 3 3 3.3 2 2 2 2 2 2 male 2.5 2.2 2.5 2.6 2.6 3 2.8 2 3 2 2 3 3 female 2.5 2.4 2.9 3 2.8 3.3 3.4 2 2 2 3 4 4 male 3.8 2.5 2.7 2.4 2.7 2.9 2.7 3 2 2 2 5 &lt;NA&gt; &lt;NA&gt; ... ... ... ... ... ... ... ... ... ... ... 6 197 female 2.1 2.9 2.5 2.8 3.2 3.3 3.8 2 2 3 2 7 198 male 4 2.5 2.9 3 3.2 3.3 3.4 2 2 2 2 8 199 female 2.3 2.6 2.3 2.7 2.7 2.8 2.8 2 2 3 2 9 200 male 3.4 2.8 3.2 3.4 3.5 3.3 3.4 2 2 2 2 job5 job6 admitted 1 2 2 yes 2 2 2 no 3 2 2 yes 4 2 2 no 5 ... ... &lt;NA&gt; 6 2 2 &lt;NA&gt; 7 1 2 &lt;NA&gt; 8 2 3 yes 9 1 1 &lt;NA&gt; data_long &lt;- data_wide %&gt;% furniture::long(c(&quot;gpa1&quot;, &quot;gpa2&quot;, &quot;gpa3&quot;, &quot;gpa4&quot;, &quot;gpa5&quot;, &quot;gpa6&quot;), # first set of 6 existing variables c(&quot;job1&quot;, &quot;job2&quot;, &quot;job3&quot;, &quot;job4&quot;, &quot;job5&quot;, &quot;job6&quot;), # second set of 6 existing variables v.names = c(&quot;gpa&quot;, &quot;job&quot;), # names of the newly created varaibles id = &quot;student&quot;) %&gt;% # the variable that identifies sets of observations dplyr::arrange(student, time) psych::headTail(data_long, top = 10) student sex highgpa admitted time gpa job 1 1 female 2.8 yes 1 2.3 2 2 1 female 2.8 yes 2 2.1 2 3 1 female 2.8 yes 3 3 2 4 1 female 2.8 yes 4 3 2 5 1 female 2.8 yes 5 3 2 6 1 female 2.8 yes 6 3.3 2 7 2 male 2.5 no 1 2.2 2 8 2 male 2.5 no 2 2.5 3 9 2 male 2.5 no 3 2.6 2 10 2 male 2.5 no 4 2.6 2 ... &lt;NA&gt; &lt;NA&gt; ... &lt;NA&gt; ... ... ... 1197 200 male 3.4 &lt;NA&gt; 3 3.4 2 1198 200 male 3.4 &lt;NA&gt; 4 3.5 2 1199 200 male 3.4 &lt;NA&gt; 5 3.3 1 1200 200 male 3.4 &lt;NA&gt; 6 3.4 1 "]
]
